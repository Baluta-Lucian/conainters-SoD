name: Local build & run (Windows + Rancher)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: read

env:
  IMAGE_NAME: myapp
  DOCKERFILE: Dockerfile
  PORT: "80"
  HOST_PORT: "8099"

jobs:
  local:
    runs-on: [self-hosted, windows, docker]
    defaults: { run: { shell: pwsh } }
    steps:
      - uses: actions/checkout@v4

      - name: Sanity check Docker (Rancher Desktop)
        run: |
          docker version
          docker info
          docker context ls

      - name: Build image & capture ID
        run: |
          $env:TAG = "${{ github.sha }}"
          $img = "$env:IMAGE_NAME`:$env:TAG"
          docker build -f "$env:DOCKERFILE" -t "$img" .
          # optional stable tag (handy for debugging)
          docker tag "$img" "$env:IMAGE_NAME:ci"
          # capture the immutable image ID
          $id = docker inspect -f "{{.Id}}" "$img"
          "TAG=$($env:TAG)"       | Out-File -FilePath $env:GITHUB_ENV -Append
          "IMAGE=$img"            | Out-File -FilePath $env:GITHUB_ENV -Append
          "IMAGE_ID=$id"          | Out-File -FilePath $env:GITHUB_ENV -Append
          docker images "$env:IMAGE_NAME" --format '{{.Repository}}:{{.Tag}} -> {{.ID}}'

      - name: Replace running container (never pull)
        run: |
          if (docker ps -a --format '{{.Names}}' | Select-String -SimpleMatch $env:IMAGE_NAME) {
            docker stop $env:IMAGE_NAME 2>$null; docker rm $env:IMAGE_NAME 2>$null
          }
          docker run --pull=never -d --name $env:IMAGE_NAME `
            -p "$env:HOST_PORT`:$env:PORT" `
            $env:IMAGE_ID

      - name: Status / URL
        run: |
          docker ps --filter "name=$env:IMAGE_NAME"
          "Open: http://localhost:$env:HOST_PORT" | Out-Host
